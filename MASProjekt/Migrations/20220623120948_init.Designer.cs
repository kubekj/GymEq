// <auto-generated />
using System;
using MASProjekt.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace MASProjekt.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220623120948_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("MASProjekt.Models.Activity", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<DateTime>("End")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("Start")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("TrainerId")
                        .HasColumnType("integer");

                    b.HasKey("ID");

                    b.HasIndex("TrainerId");

                    b.ToTable("Activities");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Description = "Tanczymy do rana",
                            End = new DateTime(2022, 6, 23, 12, 9, 48, 770, DateTimeKind.Utc).AddTicks(9450),
                            Start = new DateTime(2022, 6, 23, 12, 9, 48, 770, DateTimeKind.Utc).AddTicks(9450),
                            Title = "Zamba",
                            TrainerId = 1
                        });
                });

            modelBuilder.Entity("MASProjekt.Models.Agreement", b =>
                {
                    b.Property<int>("IdGym")
                        .HasColumnType("integer");

                    b.Property<int>("IdPerson")
                        .HasColumnType("integer");

                    b.Property<int>("AgreementType")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("ResignationDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("SignUpDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("IdGym", "IdPerson")
                        .HasName("Agreement_PK");

                    b.HasIndex("IdPerson");

                    b.ToTable("Agreements");

                    b.HasData(
                        new
                        {
                            IdGym = 1,
                            IdPerson = 1,
                            AgreementType = 1,
                            ResignationDate = new DateTime(2022, 6, 23, 12, 9, 48, 770, DateTimeKind.Utc).AddTicks(9450),
                            SignUpDate = new DateTime(2022, 6, 23, 12, 9, 48, 770, DateTimeKind.Utc).AddTicks(9450)
                        });
                });

            modelBuilder.Entity("MASProjekt.Models.Cleaning", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("DoneAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("EndedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("MaidId")
                        .HasColumnType("integer");

                    b.Property<string>("MaterialsUsed")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.HasIndex("MaidId");

                    b.ToTable("Cleanings");
                });

            modelBuilder.Entity("MASProjekt.Models.Gym", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<string>("Adress")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("Gyms");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Adress = "Szamocka 51",
                            Name = "Zdrogit"
                        });
                });

            modelBuilder.Entity("MASProjekt.Models.GymArea", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<string>("Equipment")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("GymId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.HasIndex("GymId");

                    b.ToTable("GymAreas");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Equipment = "lawka,lina",
                            GymId = 1,
                            Name = "Wolne ciezary"
                        });
                });

            modelBuilder.Entity("MASProjekt.Models.Person", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("SecondName")
                        .HasColumnType("text");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("ID");

                    b.ToTable("Person");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Person");
                });

            modelBuilder.Entity("MASProjekt.Models.PersonalTraining", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<int>("ClubMemberId")
                        .HasColumnType("integer");

                    b.Property<int>("Duration")
                        .HasColumnType("integer");

                    b.Property<string>("Opinion")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)");

                    b.Property<int>("TrainerId")
                        .HasColumnType("integer");

                    b.Property<string>("TrainingType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.HasIndex("ClubMemberId");

                    b.HasIndex("TrainerId");

                    b.ToTable("PersonalTrainings");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            ClubMemberId = 2,
                            Duration = 20,
                            Opinion = "Super ekstra",
                            TrainerId = 1,
                            TrainingType = "Cardio"
                        });
                });

            modelBuilder.Entity("MASProjekt.Data.ClubMember", b =>
                {
                    b.HasBaseType("MASProjekt.Models.Person");

                    b.Property<int?>("ActivityID")
                        .HasColumnType("integer");

                    b.Property<float>("AmountPayed")
                        .HasColumnType("real");

                    b.Property<float>("AmountToPay")
                        .HasColumnType("real");

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("UniqueNumber")
                        .HasColumnType("integer");

                    b.HasIndex("ActivityID");

                    b.HasDiscriminator().HasValue("ClubMember");

                    b.HasData(
                        new
                        {
                            ID = 2,
                            Email = "ee@wp.pl",
                            Gender = "Men",
                            Name = "Andrzej",
                            Surname = "Kejra",
                            AmountPayed = 120044f,
                            AmountToPay = 1000f,
                            Birthday = new DateTime(2022, 6, 23, 12, 9, 48, 770, DateTimeKind.Utc).AddTicks(9470),
                            UniqueNumber = 1367244050
                        });
                });

            modelBuilder.Entity("MASProjekt.Models.Guest", b =>
                {
                    b.HasBaseType("MASProjekt.Models.Person");

                    b.HasDiscriminator().HasValue("Guest");

                    b.HasData(
                        new
                        {
                            ID = 3,
                            Email = "kl@wp.pl",
                            Gender = "Men",
                            Name = "Klocu",
                            Surname = "12"
                        });
                });

            modelBuilder.Entity("MASProjekt.Models.Maid", b =>
                {
                    b.HasBaseType("MASProjekt.Models.Person");

                    b.Property<float>("HoursOfWorkInCurrentMonth")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("real");

                    b.Property<int>("YearsOfExperience")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("integer");

                    b.HasDiscriminator().HasValue("Maid");

                    b.HasData(
                        new
                        {
                            ID = 4,
                            Email = "bw@wp.pl",
                            Gender = "Woman",
                            Name = "Bozena",
                            Surname = "Wa",
                            HoursOfWorkInCurrentMonth = 0f,
                            YearsOfExperience = 0
                        });
                });

            modelBuilder.Entity("MASProjekt.Models.Owner", b =>
                {
                    b.HasBaseType("MASProjekt.Models.Person");

                    b.Property<float>("HoursOfWorkInCurrentMonth")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("real");

                    b.Property<int>("YearsOfExperience")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("integer");

                    b.HasDiscriminator().HasValue("Owner");

                    b.HasData(
                        new
                        {
                            ID = 5,
                            Email = "szef@wp.pl",
                            Gender = "Unknown",
                            Name = "Szeryf",
                            Surname = "Szefoski",
                            HoursOfWorkInCurrentMonth = 0f,
                            YearsOfExperience = 0
                        });
                });

            modelBuilder.Entity("MASProjekt.Models.Trainer", b =>
                {
                    b.HasBaseType("MASProjekt.Models.Person");

                    b.Property<float>("HoursOfWorkInCurrentMonth")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("real");

                    b.Property<int>("YearsOfExperience")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("integer");

                    b.HasDiscriminator().HasValue("Trainer");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Email = "blabla@wp.pl",
                            Gender = "Men",
                            Name = "Jacek",
                            Surname = "Placek",
                            HoursOfWorkInCurrentMonth = 144f,
                            YearsOfExperience = 2
                        });
                });

            modelBuilder.Entity("MASProjekt.Models.Activity", b =>
                {
                    b.HasOne("MASProjekt.Models.Trainer", "Trainer")
                        .WithMany("Activities")
                        .HasForeignKey("TrainerId");

                    b.Navigation("Trainer");
                });

            modelBuilder.Entity("MASProjekt.Models.Agreement", b =>
                {
                    b.HasOne("MASProjekt.Models.Gym", "Gym")
                        .WithMany("Agreements")
                        .HasForeignKey("IdGym")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MASProjekt.Models.Person", "Person")
                        .WithMany("Agreements")
                        .HasForeignKey("IdPerson")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Gym");

                    b.Navigation("Person");
                });

            modelBuilder.Entity("MASProjekt.Models.Cleaning", b =>
                {
                    b.HasOne("MASProjekt.Models.Maid", "Maid")
                        .WithMany("Cleanings")
                        .HasForeignKey("MaidId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Maid");
                });

            modelBuilder.Entity("MASProjekt.Models.GymArea", b =>
                {
                    b.HasOne("MASProjekt.Models.Gym", null)
                        .WithMany("GymAreas")
                        .HasForeignKey("GymId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MASProjekt.Models.PersonalTraining", b =>
                {
                    b.HasOne("MASProjekt.Data.ClubMember", "ClubMember")
                        .WithMany()
                        .HasForeignKey("ClubMemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MASProjekt.Models.Trainer", "Trainer")
                        .WithMany("PersonalTrainings")
                        .HasForeignKey("TrainerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ClubMember");

                    b.Navigation("Trainer");
                });

            modelBuilder.Entity("MASProjekt.Data.ClubMember", b =>
                {
                    b.HasOne("MASProjekt.Models.Activity", null)
                        .WithMany("ClubMembers")
                        .HasForeignKey("ActivityID");
                });

            modelBuilder.Entity("MASProjekt.Models.Activity", b =>
                {
                    b.Navigation("ClubMembers");
                });

            modelBuilder.Entity("MASProjekt.Models.Gym", b =>
                {
                    b.Navigation("Agreements");

                    b.Navigation("GymAreas");
                });

            modelBuilder.Entity("MASProjekt.Models.Person", b =>
                {
                    b.Navigation("Agreements");
                });

            modelBuilder.Entity("MASProjekt.Models.Maid", b =>
                {
                    b.Navigation("Cleanings");
                });

            modelBuilder.Entity("MASProjekt.Models.Trainer", b =>
                {
                    b.Navigation("Activities");

                    b.Navigation("PersonalTrainings");
                });
#pragma warning restore 612, 618
        }
    }
}
